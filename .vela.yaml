version: "1"

steps:
  - name: install
    image: golang:1.19
    pull: always
    environment:
      CGO_ENABLED: '0'
      GOOS: linux
    commands:
      - go get ./...

  - name: validate
    image: golang:1.19
    pull: always
    environment:
      CGO_ENABLED: '0'
      GOOS: linux
    commands:
      # Check that go mod tidy produces a zero diff; clean up any changes afterwards.
      - go mod tidy && git diff --exit-code; code=$?; git checkout -- .; (exit $code)
      # Check that go vet ./... produces a zero diff; clean up any changes afterwards.
      - go vet ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code)
      # Check that go fmt ./... produces a zero diff; clean up any changes afterwards.
      - go fmt ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code)
      # Check that go fix ./... produces a zero diff; clean up any changes afterwards.
      - go fix ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code)

  - name: build
    image: golang:1.19
    pull: always
    environment:
      CGO_ENABLED: '0'
      GOOS: linux
    commands:
      - go build -o release/hangle_linux_amd64 ./... 
      - ls -la release

  - name: release
    ruleset:
      event: tag
    image: debian:latest
    pull: always
    secrets: [ github_token ]
    environment:
      OWNER: nesbitjd
      REPO: hangle_cli
      TAG_NAME: "${VELA_BUILD_TAG}"
    commands:
     - apt-get update
     - apt-get -y install jq curl 
     - ./vela/create_release_asset.sh

secrets:
  - name: github_token
    key: nesbitjd/hangle_cli/github_token
    engine: native
    type: repo